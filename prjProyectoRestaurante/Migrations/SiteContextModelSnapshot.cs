// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using prjProyectoRestaurante.Data;

namespace prjProyectoRestaurante.Migrations
{
    [DbContext(typeof(SiteContext))]
    partial class SiteContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("prjProyectoRestaurante.Models.Categoria", b =>
                {
                    b.Property<int>("IDCategoria")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasMaxLength(18);

                    b.HasKey("IDCategoria");

                    b.ToTable("Categoria");
                });

            modelBuilder.Entity("prjProyectoRestaurante.Models.EstadoMesa", b =>
                {
                    b.Property<int>("IDEstado");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(50);

                    b.HasKey("IDEstado");

                    b.ToTable("EstadoMesa");
                });

            modelBuilder.Entity("prjProyectoRestaurante.Models.Factura", b =>
                {
                    b.Property<int>("IDFactura")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EstadoDeFactura")
                        .HasMaxLength(50);

                    b.Property<DateTime>("FechaFactura");

                    b.Property<int?>("IDOrden");

                    b.Property<int?>("IDPersona");

                    b.Property<string>("Observacion")
                        .HasMaxLength(50);

                    b.HasKey("IDFactura");

                    b.HasIndex("IDOrden");

                    b.HasIndex("IDPersona");

                    b.ToTable("Factura");
                });

            modelBuilder.Entity("prjProyectoRestaurante.Models.Genero", b =>
                {
                    b.Property<int>("IDGenero")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasMaxLength(50);

                    b.Property<string>("Sigla")
                        .IsRequired()
                        .HasConversion(new ValueConverter<string, string>(v => default(string), v => default(string), new ConverterMappingHints(size: 1)));

                    b.HasKey("IDGenero");

                    b.ToTable("Genero");
                });

            modelBuilder.Entity("prjProyectoRestaurante.Models.Ingrediente", b =>
                {
                    b.Property<int>("IDIngrediente")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasMaxLength(50);

                    b.Property<int?>("IDInventarioIngre");

                    b.HasKey("IDIngrediente");

                    b.HasIndex("IDInventarioIngre");

                    b.ToTable("Ingrediente");
                });

            modelBuilder.Entity("prjProyectoRestaurante.Models.InventarioIngrediente", b =>
                {
                    b.Property<int>("IDInventarioIngre")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Cantidad");

                    b.Property<decimal>("CantidadMinima");

                    b.HasKey("IDInventarioIngre");

                    b.ToTable("InventarioIngrediente");
                });

            modelBuilder.Entity("prjProyectoRestaurante.Models.InventarioProdu", b =>
                {
                    b.Property<int>("IDIventaarioProdu")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Cantidad");

                    b.Property<decimal>("CantidadMinima");

                    b.HasKey("IDIventaarioProdu");

                    b.ToTable("InventarioProdu");
                });

            modelBuilder.Entity("prjProyectoRestaurante.Models.Mesa", b =>
                {
                    b.Property<int>("IDMesa")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("IDEstado");

                    b.Property<int?>("IDReservaMesa");

                    b.Property<int>("NumeroMesa");

                    b.HasKey("IDMesa");

                    b.HasIndex("IDEstado");

                    b.HasIndex("IDReservaMesa");

                    b.ToTable("Mesa");
                });

            modelBuilder.Entity("prjProyectoRestaurante.Models.Orden", b =>
                {
                    b.Property<int>("IDOrden")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("FechaOrden");

                    b.Property<int?>("IDMesa");

                    b.HasKey("IDOrden");

                    b.HasIndex("IDMesa");

                    b.ToTable("Orden");
                });

            modelBuilder.Entity("prjProyectoRestaurante.Models.Persona", b =>
                {
                    b.Property<int>("IDPersona")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApellidoMa")
                        .HasMaxLength(50);

                    b.Property<string>("ApellidoPa")
                        .HasMaxLength(50);

                    b.Property<string>("Cedula")
                        .HasMaxLength(11);

                    b.Property<string>("Contraseña")
                        .HasMaxLength(11);

                    b.Property<string>("Direccion")
                        .HasMaxLength(50);

                    b.Property<DateTime>("FechaNacimiento");

                    b.Property<DateTime>("FechaRegistro");

                    b.Property<int?>("IDGenero");

                    b.Property<string>("Nombre")
                        .HasMaxLength(50);

                    b.Property<string>("TelefonoCel")
                        .HasMaxLength(11);

                    b.Property<string>("TelefonoDom")
                        .HasMaxLength(11);

                    b.Property<string>("Usuario")
                        .HasMaxLength(11);

                    b.HasKey("IDPersona");

                    b.HasIndex("IDGenero");

                    b.ToTable("Persona");
                });

            modelBuilder.Entity("prjProyectoRestaurante.Models.Producto", b =>
                {
                    b.Property<int>("IDProducto")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Costo");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(50);

                    b.Property<int?>("IDCategoria");

                    b.Property<int?>("IDIventaarioProdu");

                    b.Property<decimal>("Precio");

                    b.HasKey("IDProducto");

                    b.HasIndex("IDCategoria");

                    b.HasIndex("IDIventaarioProdu");

                    b.ToTable("Producto");
                });

            modelBuilder.Entity("prjProyectoRestaurante.Models.ProductoIngrediente", b =>
                {
                    b.Property<int>("IDProduIng")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("IDIngrediente");

                    b.Property<int?>("IDOrden");

                    b.Property<int?>("IDProducto");

                    b.HasKey("IDProduIng");

                    b.HasIndex("IDIngrediente");

                    b.HasIndex("IDOrden");

                    b.HasIndex("IDProducto");

                    b.ToTable("ProductoIngrediente");
                });

            modelBuilder.Entity("prjProyectoRestaurante.Models.Relacion", b =>
                {
                    b.Property<int>("IDRelacion")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasMaxLength(50);

                    b.Property<int?>("IDPersona");

                    b.HasKey("IDRelacion");

                    b.HasIndex("IDPersona");

                    b.ToTable("Relacion");
                });

            modelBuilder.Entity("prjProyectoRestaurante.Models.ReservaMesa", b =>
                {
                    b.Property<int>("IDReservaMesa")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("HoraReserva");

                    b.Property<string>("Nombre")
                        .HasMaxLength(50);

                    b.Property<string>("Telefono")
                        .HasMaxLength(11);

                    b.HasKey("IDReservaMesa");

                    b.ToTable("ReservaMesa");
                });

            modelBuilder.Entity("prjProyectoRestaurante.Models.Rol", b =>
                {
                    b.Property<int>("IDRol")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasMaxLength(50);

                    b.Property<int>("IDRelacion");

                    b.HasKey("IDRol");

                    b.HasIndex("IDRelacion");

                    b.ToTable("Rol");
                });

            modelBuilder.Entity("prjProyectoRestaurante.Models.Factura", b =>
                {
                    b.HasOne("prjProyectoRestaurante.Models.Orden", "Orden")
                        .WithMany("Factura")
                        .HasForeignKey("IDOrden");

                    b.HasOne("prjProyectoRestaurante.Models.Persona", "Persona")
                        .WithMany("Factura")
                        .HasForeignKey("IDPersona");
                });

            modelBuilder.Entity("prjProyectoRestaurante.Models.Ingrediente", b =>
                {
                    b.HasOne("prjProyectoRestaurante.Models.InventarioIngrediente", "InventarioIngrediente")
                        .WithMany("Ingrediente")
                        .HasForeignKey("IDInventarioIngre");
                });

            modelBuilder.Entity("prjProyectoRestaurante.Models.Mesa", b =>
                {
                    b.HasOne("prjProyectoRestaurante.Models.EstadoMesa", "EstadoMesa")
                        .WithMany("Mesa")
                        .HasForeignKey("IDEstado");

                    b.HasOne("prjProyectoRestaurante.Models.ReservaMesa", "ReservaMesa")
                        .WithMany("Mesa")
                        .HasForeignKey("IDReservaMesa");
                });

            modelBuilder.Entity("prjProyectoRestaurante.Models.Orden", b =>
                {
                    b.HasOne("prjProyectoRestaurante.Models.Mesa", "Mesa")
                        .WithMany("Orden")
                        .HasForeignKey("IDMesa");
                });

            modelBuilder.Entity("prjProyectoRestaurante.Models.Persona", b =>
                {
                    b.HasOne("prjProyectoRestaurante.Models.Genero", "Genero")
                        .WithMany("Persona")
                        .HasForeignKey("IDGenero");
                });

            modelBuilder.Entity("prjProyectoRestaurante.Models.Producto", b =>
                {
                    b.HasOne("prjProyectoRestaurante.Models.Categoria", "Categoria")
                        .WithMany("Producto")
                        .HasForeignKey("IDCategoria");

                    b.HasOne("prjProyectoRestaurante.Models.InventarioProdu", "InventarioProdu")
                        .WithMany("Producto")
                        .HasForeignKey("IDIventaarioProdu");
                });

            modelBuilder.Entity("prjProyectoRestaurante.Models.ProductoIngrediente", b =>
                {
                    b.HasOne("prjProyectoRestaurante.Models.Ingrediente", "Ingrediente")
                        .WithMany("ProductoIngrediente")
                        .HasForeignKey("IDIngrediente");

                    b.HasOne("prjProyectoRestaurante.Models.Orden", "Orden")
                        .WithMany("ProductoIngrediente")
                        .HasForeignKey("IDOrden");

                    b.HasOne("prjProyectoRestaurante.Models.Producto", "Producto")
                        .WithMany("ProductoIngrediente")
                        .HasForeignKey("IDProducto");
                });

            modelBuilder.Entity("prjProyectoRestaurante.Models.Relacion", b =>
                {
                    b.HasOne("prjProyectoRestaurante.Models.Persona", "Persona")
                        .WithMany("Relacion")
                        .HasForeignKey("IDPersona");
                });

            modelBuilder.Entity("prjProyectoRestaurante.Models.Rol", b =>
                {
                    b.HasOne("prjProyectoRestaurante.Models.Relacion", "Relacion")
                        .WithMany("Rol")
                        .HasForeignKey("IDRelacion")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
